<part id="basics">
	<title>Basics</title>
	<chapter id="operating_principles">
		<title>Principles of Operation</title>
		<para>
			Cacti operation may be divided into three different tasks:
		</para>
		<figure id="principles_of_operation">
			<title>Principles of Operation</title>
				<mediaobject>
				<imageobject>
					<imagedata fileref="images/principles_of_operation.png" format="PNG">
				</imageobject>
			</mediaobject>
		</figure>
		<sect1 id="Data_Retrieval">
		<title>Data Retrieval</title>
			<para>
				First task is to retrieve data. Cacti will do so using its Poller.
				The Poller is executed from the operating system's scheduler,
				e.g. crontab for Unix flavored OSes.
			</para>
			<para>
				In current IT installations, you're dealing with lots of devices
				of different kind, e.g. servers, network equipment, appliances
				and the like. To retrieve data from remote targets/hosts,
				cacti will mainly use the Simple Network Management Protocol SNMP.
				Thus, all devices capable of using SNMP will be eligible to be
				monitored by cacti.
			</para>
			<para>
				Later on, we demonstrate how to extend cacti's capabilities of
				retrieving data to scripts, script queries and more.
			</para>
		</sect1>
		<sect1 id="Data_Storage">
		<title>Data Storage</title>
			<para>
				There are lots of different approaches for this task. Some may
				use an (SQL) database, others flat files. Cacti uses <ulink url="http://www.rrdtool.org/"><application>RRDTool</application>
				</ulink> to store data.
			</para>
			<para>
				RRD is the acronym for Round Robin Database.
				RRD is a system to store and display time-series data
				(i.e. network bandwidth, machine-room temperature, server load average).
				It stores the data in a very compact way that will not expand
				over time, and it can create beautiful graphs.
				This keeps storage requirements at bay.
			</para>
			<para>
				Likewise, rrdtool will perform some specific tasks.
				It performs consolidation to combine raw data (a primary data point in rrdtool lingo)
				to consolidated data (a consolidated data point). This way, historical data
				is compressed to save space. rrdtool knows different consolidation functions:
				AVERAGE, MAXIMUM, MINIMUM and LAST.
			</para>
		</sect1>
		<sect1 id="Data_Presentation">
		<title>Data Presentation</title>
			<para>
				One of the most appreciated features of <ulink url="http://www.rrdtool.org/"><application>RRDTool</application>
				</ulink> is the built-in
				graphing function. This comes in useful when combining this with
				some commonly used webserver. Such, it is possible to access
				the graphs from merely any browser on any plattform.
			</para>
			<para>
				Graphing can be done in very different ways. It is possible,
				to graph one or many items in one graph. Autoscaling is supported
				and logarithmic y-axis as well. You may stack items onto another
				and print pretty legends denoting characteristics such as
				minimum, average, maximum and lots more.
			</para>
		</sect1>
	</chapter>
	<chapter id="graph_overview">
		<title>Graph Overview</title>
		<para>
			Almost everything in Cacti is somehow related to a graph. At any time, you can list all available
			graphs by clicking on the <guilabel>Graph Management</guilabel> menu item. While it is possible to
			manually create graphs through this screen, new users should follow the instructions provided in the
			next chapter for creating new graphs in Cacti.
		</para>
		<para>
			For users that are familiar with <ulink url="http://www.rrdtool.org/"><application>RRDTool</application>
			</ulink>, you will immediately recognize that a graph in Cacti is closely modeled after <application>RRDTool</application>'s graphs.
			This makes sense since Cacti provides a user friendly interface to <application>RRDTool</application> without requiring users to
			understand how <application>RRDTool</application> works. With this in mind, every graph in Cacti has certain settings and at least
			one graph item associated with it. While graph settings define the overall properties of a graph, the graph
			items define the data that is to be represented on the graph. So the graph items define which data to display
			and how it should displayed, and also define what should be displayed on the legend.
		</para>
		<para>
			Each graph and graph item has a set of parameters which control various aspects of the graph.
			Fortunately through the use of graph templates, it is not necessary to understand the function
			of each field to create graphs for your network. When you are ready to take on the task of
			creating your own graph templates, extensive field descriptions for both graphs and graph items
			are provided in that section of the manual.
		</para>
	</chapter>
	<chapter id="graph_howto">
		<title>How to Graph Your Network</title>
		<para>
			At this point, you probably realize that graphing is Cacti's greatest strength. Cacti has many powerful
			features that provide complex graphing and data acquisition, some which have a slight learning curve.
			Do not let that stop you however, because graphing your network is incredibly simple.
		</para>
		<para>
			The next two sections will outline the two basic steps which are typically required to create graphs for
			most devices.
		</para>
		<sect1 id="new_device">
			<title>Creating a Device</title>
			<para>
				The first step to creating graphs for your network is adding a device for each network device that
				you want to create graphs for. A device specifies important details such as the network
				hostname, SNMP parameters, and host type.
			</para>
			<para>
				To manage devices within Cacti, click on the <guilabel>Devices</guilabel> menu item.
				Clicking <guilabel>Add</guilabel>  will bring up a new device form. The first two fields,
				<guilabel>Description</guilabel> and <guilabel>Hostname</guilabel> are the only two fields that
				require your input beyond the defaults. If your host type is defined under the Device Template
				dropdown, be sure to select it here. You can always choose "Generic SNMP-enabled Host" if you are
				just graphing traffic or "None" if you are unsure. It is important to remember that the host
				template you choose will not lock you into any particular configuration, it will just provide
				more intelligent defaults for that type of host.
			</para>
			<figure id="img_device_new">
				<title>Adding a New Device</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/new_device.png" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				The field definitions are as follows
			</para>
			<table frame='all'>
				<title>Device Field Definitions</title>
				<tgroup cols='2' align='left' colsep='1' rowsep='1'>
					<colspec colnum="1">
					<colspec colwidth="3*" colnum="2">
					<thead>
						<row>
							<entry align="center">Field</entry>
							<entry align="center">Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>Description</entry>
							<entry>This description will show up in the first column of the device list.
							You may refer to it e.g. in graph titles</entry>
						</row>
						<row>
							<entry>Hostname</entry>
							<entry>Either an IP address or a hostname.
							The hostname will be resolved using the standard host resolving mechanisms,
							e.g. Dynamic Name Services (DNS)</entry>
						</row>
						<row>
							<entry>Device Template</entry>
							<entry>A Device Template is a container for a list of graph templates
							that will be related to this host.</entry>
						</row>
						<row>
							<entry>Notes</entry>
							<entry>New with cacti 0.8.7.
							Add notes to a host to add arbitrary text.</entry>
						</row>
						<row>
							<entry>Disable Host</entry>
							<entry>Exclude this host from being polled.
							This is of particular value, if a device is no longer available,
							but should be kept e.g. as a reference.</entry>
						</row>
						<row>
							<entry><emphasis>Availability/Reachability Options</emphasis></entry>
							<entry></entry>
						</row>
						<row>
							<entry>Downed Device Detection</entry>
							<entry><para>NONE: Deactivate downed host detection
							</para><para>PING and SNMP: perform both tests
							</para><para>SNMP: verify SNMP check on OID .1 and .1.3
							</para><para>ICMP: perform a ping test, see below
							</para></entry>
						</row>
						<row>
							<entry>Ping Method</entry>
							<entry><para>Available only for "PING and SNMP" or "PING"
							</para><para>ICMP: perform ICMP tests. Requires permissions
							</para><para>UDP: perform a UDP test
							</para><para>TCP: perform a TCP test</para></entry>
						</row>
						<row>
							<entry>Ping Port</entry>
							<entry><para>Available only for UDP/TCP PING test types.
							</para><para>Please define the port to be tested here.
							Make sure, that no firewall intercepts the tests</para></entry>
						</row>
						<row>
							<entry>Ping Timeout Value</entry>
							<entry>After this time, the test fails. Measured
							in units of milliseconds</entry>
						</row>
						<row>
							<entry>Ping Retry Count</entry>
							<entry>The number of times Cacti will attempt to ping a host before failing.</entry>
						</row>
						<row>
							<entry><emphasis>SNMP Options</emphasis></entry>
							<entry></entry>
						</row>
						<row>
							<entry>SNMP Version</entry>
							<entry><para>Version 1: Use SNMP Version 1.
							Be aware, that 64bit counters are not supported in this SNMP version
							</para><para>Version 2: Referred to as SNMP V2c in most SNMP documentations
							</para><para>Version 3: SNMP V3, supporting authentication and encryption</para></entry>
						</row>
						<row>
							<entry>SNMP Community</entry>
							<entry>SNMP read community for this device.</entry>
						</row>
						<row>
							<entry>SNMP Port</entry>
							<entry>Enter the UDP port number to use for SNMP (default is 161).</entry>
						</row>
						<row>
							<entry>SNMP Timeout</entry>
							<entry>The maximum number of milliseconds Cacti will wait for an SNMP response
							(does not work with php-snmp support).</entry>
						</row>
						<row>
							<entry>Maximum OID's Per Get Request</entry>
							<entry><para>This is a performance feature. Specifies the number of
							OID's that can be obtained in a single SNMP Get request.
							</para><para>NOTE: This feature only works when using <application>Spine</application>
							</para><para>NOTE: Some devices do not support values &gt; 1</para></entry>
						</row>
						<row>
							<entry><emphasis>Security Options for SNMP V3</emphasis></entry>
							<entry></entry>
						</row>
						<row>
							<entry>SNMP Username</entry>
							<entry>The <userinput>username</userinput> of an SNMP V3 <userinput>createUser</userinput> statement
							or equivalent</entry>
						</row>
						<row>
							<entry>SNMP Password</entry>
							<entry>The <userinput>authpassphrase</userinput> of an SNMP V3 <userinput>createUser</userinput> statement
							or equivalent</entry>
						</row>
						<row>
							<entry>SNMP Auth Protocol</entry>
							<entry>The <userinput>authentication type</userinput> of an SNMP V3 <userinput>createUser</userinput> statement
							or equivalent. Select either MD5 or SHA. This entry defaults to MD5.</entry>
						</row>
						<row>
							<entry>SNMP Privacy Passphrase</entry>
							<entry>The <userinput>privacy passphrase</userinput> of an SNMP V3 <userinput>createUser</userinput> statement
							or equivalent.</entry>
						</row>
						<row>
							<entry>SNMP Privacy Protocol</entry>
							<entry>The <userinput>privacy protocol</userinput> of an SNMP V3 <userinput>createUser</userinput> statement
							or equivalent. Select either DES or AES. This entry defaults to DES.</entry>
						</row>
						<row>
							<entry>SNMP Context</entry>
							<entry>When using the View-Based Access Control Model (VACM), it is possible to specify
							an SNMP Context when mapping a community name to a security name with a
							<userinput>com2sec</userinput> directive, with the <userinput>group</userinput>
							directive and the <userinput>access</userinput> directive. This allows
							for defining special access models. If using such a parameter with your
							target's SNMP configuration, specify the context name to be used to access
							that target here.</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<para>
				After saving your new device, you should be redirected back to the same edit form with some
				additional information. If you configured SNMP for this host by providing a valid community string,
				you should see various statistics listed at the top of the page. If you see "SNMP error" instead,
				this indicates an SNMP problem between Cacti and your device.
			</para>
			<para>
				Towards the bottom of the page there will be two addition boxes, <guilabel>Associated Data
				Queries</guilabel>, and <guilabel>Associated Graph Templates</guilabel>. If you selected a host
				template on the previous page, there will probably be a few items in each box. If there is nothing
				listed in either box, you will need to associate at least one data query or graph template with
				your new device or you will not be able to create graphs in the next step. If no available
				graph template or data query applies to your device, you can check the Cacti templates repository
				or create your own if nothing currently exists.
			</para>
			<sect2 id='snmp_info'>
				<title>A Word About SNMP</title>
				<para>
					The SNMP version that you choose can have a great effect on how SNMP works for you in
					Cacti. Version 1 should be used for everything unless you have reason to choose otherwise.
					If you plan on utilizing (and your device supports) high-speed (64-bit) counters, you must
					select version 2. Starting with Cacti 0.8.7, version 3 is fully implemented.
				</para>
				<para>
					The way in which Cacti retrieves SNMP information from a host has an effect on which
					SNMP-related options are supported. Currently there are three types of SNMP retrieval
					methods in Cacti and are outlined below.
				</para>
				<table frame='all'>
					<title>SNMP Retrieval Types</title>
					<tgroup cols='4' align='left' colsep='1' rowsep='1'>
						<colspec colnum="1">
						<colspec colnum="2">
						<colspec colnum="3">
						<colspec colnum="4">
						<thead>
							<row>
								<entry align="center">Type</entry>
								<entry align="center">Description</entry>
								<entry align="center">Supported Options</entry>
								<entry align="center">Places Used</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>External SNMP</entry>
								<entry>Calls the net-snmp snmpwalk and snmpget binaries that are installed on your system.</entry>
								<entry>All SNMP options</entry>
								<entry>Web interface and PHP poller (poller.php)</entry>
							</row>
							<row>
								<entry>Internal SNMP (php-snmp)</entry>
								<entry>Uses PHP's SNMP functions which are linked against net-snmp or ucd-snmp at compile time.</entry>
								<entry>Version 1 Only (Community and Port)</entry>
								<entry>Web interface and PHP poller (poller.php)</entry>
							</row>
							<row>
								<entry><application>Spine</application> SNMP</entry>
								<entry>Links directly against net-snmp or ucd-snmp and calls the API directly.</entry>
								<entry>All SNMP options</entry>
								<entry>C-Based Poller (<application>Spine</application>)</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</sect2>
			<sect2 id='snmp_v3'>
			<title>SNMP V3 Options Explained</title>
				<para>SNMP supports authentication and encryption features
				when using SNMP protocol version 3 known as
				<emphasis>View-Based Access Control Model (VACM)</emphasis>.
				This requires, that the
				target device in question supports and is configured for
				SNMP V3 use. In general, configuration of V3 options is
				target type dependant. The following is cited from
				<userinput>man snmpd.conf</userinput> concerning user definitions</para>
				<para><screen><citation>   <emphasis>SNMPv3 Users</emphasis>
       createUser [-e ENGINEID] username (MD5|SHA) authpassphrase [DES|AES] [privpassphrase]

              MD5 and SHA are the authentication types to use.  DES and AES are the privacy
              protocols  to  use. If  the  privacy  passphrase  is not specified, it is assumed
              to be the same as the authentication passphrase.  Note that the users created will
              be useless unless they are also added  to  the  VACM access control tables
              described above.

              SHA  authentication  and DES/AES privacy require OpenSSL to be installed and the
              agent to be built with OpenSSL support.  MD5 authentication may be used without
              OpenSSL.

              Warning: the minimum pass phrase length is 8 characters.</citation></screen></para>
				<para>VACM directives are explained from
				<userinput>man snmpd.conf</userinput> as follows</para>
				<para><screen><citation>   <emphasis>VACM Configuration</emphasis>
       The full flexibility of the VACM is available using four configuration directives -
       com2sec, group,  view and access.  These provide direct configuration of the underlying
       VACM tables.

       com2sec  [-Cn CONTEXT] SECNAME SOURCE COMMUNITY
              map  an  SNMPv1 or SNMPv2c community string to a security name - either from a
              particular range of source addresses, or globally ("default").  A restricted
              source can either be a specific  hostname (or  address),  or  a  subnet -
              represented as IP/MASK (e.g. 10.10.10.0/255.255.255.0), or IP/BITS
              (e.g. 10.10.10.0/24), or the IPv6 equivalents.

              The same community string can be specified in several separate directives
              (presumably with different  source  tokens), and the first source/community
              combination that matches the incoming request will be selected.  Various
              source/community combinations can also map to the same security name.

              If a CONTEXT is specified (using -Cn), the community string will be mapped
              to a security  name  in the named SNMPv3 context. Otherwise the default
              context ("") will be used.

       group GROUP {v1|v2c|usm} SECNAME
              maps  a  security name (in the specified security model) into a named group.
              Several group directives can specify the same group name, allowing a single
              access setting to apply to several  users and/or community strings.

              Note  that  groups must be set up for the two community-based models separately -
              a single com2sec (or equivalent) directive will typically be accompanied by two
              group directives.

       view VNAME TYPE OID [MASK]
              defines a named "view" - a subset of the overall OID tree. This is most commonly
              a single subtree, but  several view directives can be given with the same view
              name, to build up a more complex collection of OIDs.  TYPE is either included
              or excluded, which can again define a more complex view (e.g by excluding certain
              sensitive objects from an otherwise accessible subtree).

              MASK is a list of hex octets (separated by <quote>.</quote> or <quote>:</quote>)
              with the set bits indicating which subidentifiers in the view OID to match against.
              This can be used to define a view covering a particular row  (or  rows) in a table.
              If not specified, this defaults to matching the OID exactly (all bits set), thus
              defining a simple OID subtree.

       access GROUP CONTEXT {any|v1|v2c|usm} LEVEL PREFX READ WRITE NOTIFY
              maps from a group of users/communities (with a particular security model
              and  minimum  security level, and in a specific context) to one of three views,
              depending on the request being processed.

              LEVEL is one of noauth, auth, or priv.  PREFX specifies how CONTEXT should be
              matched against  the context  of  the  incoming  request, either exact or prefix.
              READ, WRITE and NOTIFY specifies the view to be used for GET*, SET and
              TRAP/INFORM requests (althought the NOTIFY view is not currently used).  For
              v1 or v2c access, LEVEL will need to be noauth.</citation></screen></para>

              <para>As an example, following definitions in the snmpd configuration
              create a set of definitions for use with SNMP V3</para>
              <screen># sample configuration for SNMP V3

# create an SNMP V3 user with an authpassphrase and a privacy passphrase
##         username   authProto  authpassphrase  privProto  privpassphrase
##         --------   ---------  --------------  ---------  --------------
createUser gandalf    MD5        myauthpass      DES        myprivpass


# Second, map the security name into a group name:
##    groupName    securityModel  securityName
##    ---------    -------------  ------------
group groupv3      usm            gandalf


# Third, create a view for us to let the group have rights to:
##          incl/excl  subtree   mask
##          ---------  -------   ----
view    all included   .iso      80


# Fourth, create the access for that group without context
##                context sec.model sec.level prefix read   write  notif
##                ------- --------- --------- ------ ----   -----  -----
access groupv3    ""      any       auth      exact  all    all    all</screen>

				<para>When adding this stuff to your snmp configuration, please
				remember to restart the agent. Verify this setting using</para>
				<screen><prompt>shell&gt;</prompt>snmpwalk -v 3 -a MD5 -A myauthpass -x DES \
-X myprivpass -u gandalf -l authpriv localhost interface
IF-MIB::ifNumber.0 = INTEGER: 3
IF-MIB::ifIndex.1 = INTEGER: 1
IF-MIB::ifIndex.2 = INTEGER: 2
IF-MIB::ifIndex.3 = INTEGER: 3
IF-MIB::ifDescr.1 = STRING: lo
IF-MIB::ifDescr.2 = STRING: irda0
IF-MIB::ifDescr.3 = STRING: eth0
IF-MIB::ifType.1 = INTEGER: softwareLoopback(24)
IF-MIB::ifType.2 = INTEGER: other(1)
IF-MIB::ifType.3 = INTEGER: ethernetCsmacd(6)
...</screen>
			</sect2>
		</sect1>

		<sect1 id="new_graphs">
			<title>Creating the Graphs</title>
			<para>
				Now that you have created some devices, it is time to create graphs for these devices. To
				do this, select the <guilabel>New Graphs</guilabel> menu option under the <guilabel>Create</guilabel>
				heading. If you're still at the device edit screen, select <guilabel>Create Graphs for this Host</guilabel> to
				see a screen similar to the image pictured below.
			</para>
			<figure id="img_graph_new">
				<title>Creating New Graphs</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/new_graphs" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				The dropdown menu that contains each device should be used to select the host that you
				want to create new graphs for. The basic concept to this page is simple, place a check in each
				row that you want to create a graph for and click <guilabel>Create</guilabel>.
			</para>
			<para>
				If you are creating graphs from inside a "Data Query" box, there are a few additional things to
				keep in mind. First is that you may encounter the situation as pictured above with the "SNMP -
				Interface Statistics" data query. If this occurs you may want to consult the section on debugging
				data queries to see why your data query is not returning any results. Also, you may see a "Select
				a graph type" dropdown box under some data query boxes. Changing the value of this dropdown box
				affects which type of graph Cacti will make after clicking the <guilabel>Create</guilabel> button.
				Cacti only displays this dropdown box when there is more than one type to choose from, so it may
				not be displayed in all cases.
			</para>
			<para>
				Once you have selected the graphs that you want to create, simply click the <guilabel>Create</guilabel>
				button at the bottom of the page. You will be taken to a new page that allows you to specify
				additional information about the graphs you are about to create. You only see the fields here
				that are not part of each template, otherwise the value automatically comes from the template.
				When all of the values on this page look correct, click the <guilabel>Create</guilabel> button
				one last time to actually create your graphs.
			</para>
			<para>
				If you would like to edit or delete your graphs after they have been created, use the
				<guilabel>Graph Management</guilabel> item on the menu. Likewise, the <guilabel>Data Source
				</guilabel> menu item allows you to manage your data sources in Cacti.
			</para>
		</sect1>
	</chapter>
	<chapter id="graph_viewing">
		<title>Viewing Graphs</title>
		<sect1 id="new_graph_trees">
			<title>Graph Trees</title>
			<para>
				A graph tree can be thought of as a hierarchical way of organizing your graphs. Each graph tree
				consists of zero or more headers or branch nodes that contain leaf nodes such as graphs or trees.
				Multiple graph trees or branches within a single tree can be combined to form a very powerful way
				of organizing your graphs.
			</para>
			<sect2 id="new_graph_tree">
				<title>Creating a Graph Tree</title>
				<para>
					To create a new graph tree, select the <guilabel>Graph Trees</guilabel> menu item under the
					<guilabel>Management</guilabel> header. Select <guilabel>Add</guilabel> on this page to create a
					new tree. The following page will prompt you for a tree name, which will be used to identify the
					graph tree throughout Cacti.
					Along with the <guilabel>Name</guilabel>, you may select one of four currently supported
					<guilabel>Sorting Types</guilabel></para>
					<table frame='all'>
						<title>Tree Sporting Type Definitions</title>
						<tgroup cols='2' align='left' colsep='1' rowsep='1'>
							<colspec colnum="1">
							<colspec colwidth="3*" colnum="2">
							<thead>
								<row>
									<entry align="center">Field</entry>
									<entry align="center">Description</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>Name</entry>
									<entry>Name of the tree entry.
									The sort order of all trees themselves is
									always alphabetical</entry>
								</row>
								<row>
									<entry>Sorting Type</entry>
									<entry><para>Manual Ordering (No Sorting): You may chance the sequence at your will
									</para><para>Alphabetical Ordering: All subtrees are ordered alphabetically, unless specifies otherwise (you may chance sort options at subtree lebel), i.e. 1, Ab, ab
									</para><para>Natural Ordering: ie. ab1, ab2, ab7, ab10, ab20
									</para><para>Numeric Ordering: Leading zeroes are not taken into account when ordering numerically, i.e. 01, 02, 4, 04
									</para></entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para>Once you type a name, click the <guilabel>Create</guilabel> button to
					continue. You will be redirected to a page similar to the one below, but without all of the items.
				</para>
				<figure id="img_graph_tree_new">
					<title>Editing a Graph Tree</title>

					<mediaobject>
						<imageobject>
							<imagedata fileref="images/graph_tree" format="PNG">
						</imageobject>
					</mediaobject>
				</figure>
				<para>
					To start adding items to your tree, click add in the <guilabel>Tree Items</guilabel> box. There are
					currently three different types of tree items you can choose from: header, graph, or host. Simply
					choose the type you want, fill in the value for that type, and click <guilabel>Create</guilabel> to
					make your new graph tree item. Clicking the <guilabel>Add</guilabel> link to the right of any branch
					will add the new item below that branch, you can change the branch that any item belongs to by changing
					its <guilabel>Parent Item</guilabel> field.
				</para>
				<para>
					Please note the "++" and the "--" buttons. They will help you managing large trees.
					Pressing the "--" will collapse all tree levels while "++" expands all of them.
					You may expand each single subtree of a collapsed tree to reorder, add or delete entries
					without much scrolling.
				</para>
			</sect2>
		</sect1>
	</chapter>
	<chapter id="user_management">
		<title>User Management</title>
		<para>
			In addition to giving you the tools to create sophisticated graphs, Cacti enables you to create users
			that are tailored specifically to their requirements. Each user has certain settings such as login
			actions, as well as graph viewing settings. There are also two levels of permissions control, realm
			permissions and graph permissions which enable you to control what the user can see and change.
		</para>
		<figure id="img_user_list">
			<title>User Management</title>

			<mediaobject>
				<imageobject>
					<imagedata fileref="images/user_management_list" format="PNG">
				</imageobject>
			</mediaobject>
		</figure>
		<para>
			Out of the box, there are two users that come with every Cacti installation. The "admin" user, is the
			main user that by default has access to see and change everything in Cacti. This is the user that you
			first login with in Cacti, and is probably a good idea to keep around unless you know otherwise. The
			second user is the "guest" user, which controls which areas/graphs are allowed for unauthenticated
			users. By default this user only has rights to view, but not change all graphs. This enables any
			unauthenticated user to visit 'graph_view.php' and view your graphs. This behavior can be changed by
			either changing the realm permissions for the "guest" user, or disabling the guest user altogether
			under <guilabel>Cacti Settings</guilabel>.  By default in 0.8.7 and later, the "guest" user is not
			set in the setting, effectively disabling "guest" (Unauthenticated) access to Cacti.
		</para>



		<sect1 id="edit_existing_user">
			<title>Editing an existing User</title>
			<para>
				To edit an existing user, select the <guilabel>User Management</guilabel> item under the
				<guilabel>Utilities</guilabel> heading on the Cacti menu. Once at the user management screen,
				click username of the user you wish to edit. You will see a screen that looks similar to the image below.
			</para>
			<figure id="img_user_edit">
				<title>Editing a User</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_edit" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				At minimum, you must specify a <guilabel>User Name</guilabel> and
				a <guilabel>Password</guilabel> for each user. Each user field is described in more detail
				below. In addition to these fields, each user can have their own realm permissions", graph
				permissions, and graph settings. Each of these items are described in this section of the
				manual.
			</para>
			<table frame='all'>
				<title>Field Description: User Management</title>
				<tgroup cols='2' align='left' colsep='1' rowsep='1'>
					<colspec colnum="1">
					<colspec colwidth="3*" colnum="2">
					<thead>
						<row>
							<entry align="center">Name</entry>
							<entry align="center">Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>User Name</entry>
							<entry>This field contains the actual login name for the user. There are no character limits this field, but it would make sense to keep it to alphanumeric characters to maintain simplicity.</entry>
						</row>
						<row>
							<entry>Full Name</entry>
							<entry>(Optional) You can use this field as a more descriptive identifier for the user. It is currently only used for display on the user management page.</entry>
						</row>
						<row>
							<entry>Password</entry>
							<entry>Enter the password for the user twice, once in each text box. Keep in mind that passwords are case sensitive and the password will remain unchanged if the boxes are both left empty.</entry>
						</row>
						<row>
							<entry>Account Options</entry>
							<entry>There are currently two account related options that can be set for each user. The first, 'User Must Change Password at Next Login', forces a password change immediately after the user logs in. The second option, 'Allow this User to Keep Custom Graph Settings', dictates whether the user can maintain their own custom graph viewing settings which includes expanding and collapsing trees.</entry>
						</row>
						<row>
							<entry>Graph Options</entry>
							<entry>There are three permission related options that can be set for each user here. The 'User Has Rights to {Tree,List,Preview} View' checkboxes dictate which graph viewing areas the user can see.</entry>
						</row>
						<row>
							<entry>Login Options</entry>
							<entry>These options dictate what occurs immediately after the user logs in. The first option, 'Show the page that user pointed their browser to.' will point the user to whatever page they were heading to before being interrupted by the login page. The 'Show the default console screen.' option will always point the user to 'index.php' after a successful login. The last option, 'Show the default graph screen.' will point the user to 'graph_view.php' after a successful login.</entry>
						</row>
						<row>
							<entry>Authentication Realm</entry>
							<entry>Multiple types of users can exist in Cacti.  This setting allows you to specify a user for use with Local, Web Basic or LDAP Authentication.  Template users must be Local.  </entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<sect2 id="realm_permissions">
				<title>Realm Permissions</title>
				<para>
					Realm permissions control which areas of Cacti a user can access. You can edit a user's realm
					permissions by selecting <guilabel>User Management</guilabel> and choosing the user you
					want to edit the permissions for. The <guilabel>Realm Permissions</guilabel> box will be displayed
					in the lower part of the screen. Each "realm" is a grouping that represents common tasks in Cacti,
					making it easier to fine tune each user's access.
				</para>
				<para>
					If you want to create a user that can only view graphs, you should select the <guilabel>View
					Graphs</guilabel> realm and leave everything else unchecked. See the <guilabel>Graph
					Permissions</guilabel> section for more information about how to fine tune this even more on a per-graph
					basis. Conversely, if the user needs to access the console, they will need <guilabel>Console
					Access</guilabel> and any additional realms that you see fit.
				</para>
			</sect2>
			<sect2 id="graph_permissions">
				<title>Graph Permissions</title>
				<para>
					Graph permissions control which graphs a user is allowed to view, it does not apply to editing graphs.
					You can edit a user's graph permissions by selecting <guilabel>User Management</guilabel> and choosing
					the user you want to edit the permissions for. Now select the <guilabel>Graph Permissions</guilabel> tab
					to view this user's graph permissions. There are three different ways that you can apply graph permissions,
					by graph, by host, or by graph template. This works by allowing or denying the user to all graphs associated
					with the particular group. So you can deny a user to a single graph, all graphs associated with a particular
					host, or all graphs associated with a particular graph template. Combining these three types of assigning
					graph permissions results in a very powerful graph policy editor.
				</para>
				<para>
					Each assignment type contains a <guilabel>Default Policy</guilabel> dropdown which can be used to control
					whether the user should be allowed to view everything or be denied from everything by default in the particular
					group. It is very important to remember that these policies are evaluated in the order: graph, host, graph
					template. Therefore, if you set graph's default policy to <guilabel>Deny</guilabel>, but kept host and graph
					template at <guilabel>Allow</guilabel>, the user's effective policy would be <guilabel>Deny</guilabel> since
					the graph assignment type is evaluated first. You typically either want to set all default policies to
					<guilabel>Deny</guilabel> for a restrictive user, or <guilabel>Allow</guilabel> for a non-restrictive user.
					If you thoroughly understand Cacti's graph permissions system, these default policies can be combined to provide
					very complex results.
				</para>
			</sect2>
			<sect2 id="graph_settings">
				<title>Graph Settings</title>
				<para>
					Cacti stores certain graph viewing settings for each user, which enables each user to view graphs in an optimal
					way. These preferences controls things such as the preview graph size or the default graph viewing mode to use.
					In addition to managing these settings here under user management, each user can change their own settings by
					clicking on the <guilabel>Graphs</guilabel> tab and selecting the <guilabel>Settings</guilabel> tab on the
					following page. If you want to prevent a user from being able to keep their own graph preferences, uncheck the
					<guilabel>Allow this User to Keep Custom Graph Settings</guilabel> checkbox in user management. The user will be
					presented with an "Access Denied" error message if they attempt to click the <guilabel>Settings</guilabel> tab
					when this box is checked.
				</para>
			</sect2>

		</sect1>
		<sect1 id="create_new_user">
			<title>Creating a New User</title>
			<para>
				To create a new user, select the <guilabel>User Management</guilabel> item under the
				<guilabel>Utilities</guilabel> heading on the Cacti menu. Once at the user management screen,
				click <guilabel>Add</guilabel>.
			</para>
			<figure id="img_user_new">
				<title>Adding a User</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_new" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				At minimum, you must specify a <guilabel>User Name</guilabel> and
				a <guilabel>Password</guilabel> for each user. Each user field is described in more detail
				in the Editing an existing User section previous to this one. In addition to these fields,
				each user can have their own realm permissions", graph permissions, and graph settings. Each
				of these items are described in editing existing users section of the manual.
			</para>
		</sect1>
		<sect1 id="copying_user">
			<title>Copying a user</title>
			<figure id="img_user_copy_1">
				<title>Copy a User Part 1</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_copy_1" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				To copy a user to a new user, select the <guilabel>User Management</guilabel> item under the
				<guilabel>Utilities</guilabel> heading on the Cacti menu. Once at the user management screen,
				select the user you would like to copy from and select copy from the <guilabel>Action</guilabel>
				selection box, click <guilabel>Go</guilabel> to continue.  If you select multiple users,
				only the first selected user will be used as the source user.
			</para>
			<figure id="img_user_copy_2">
				<title>Copy a User Part 2</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_copy_2" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				Specify the <guilabel>New Username</guilabel>, <guilabel>New Full Name</guilabel> and
				<guilabel>New Realm</guilabel> of the new user.  Click <guilabel>Yes</guilabel> to copy the
				selected template user to the the designated new user.  An error will be returned if you attempt
				to copy over an existing user.  If you would like to copy over an existing user, use
				<guilabel>Batch Copy</guilabel>.
			</para>
		</sect1>
		<sect1 id="enable_disable_users">
			<title>Enable/Disable Users</title>
			<figure id="img_user_enable_disable_1">
				<title>Enable/Disable Users Part 1</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_enable_disable_1" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				To enable or disable a set of or a single user, select the <guilabel>User Management</guilabel>
				item under the <guilabel>Utilities</guilabel> heading on the Cacti menu. Once at the user management
				screen, select the user(s) you would like to enable or disable and select enable or disable from the
				<guilabel>Action</guilabel> selection box, click <guilabel>Go</guilabel> to continue.
			</para>
			<figure id="img_user_enable_disable_2">
				<title>Enable/Disable Users Part 2</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_enable_disable_2" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				Confirm that you want to disable or enable the listed users. Click <guilabel>Yes</guilabel> to
				perform the action.  Disabling your own account is possible and not recommended, as once you logoff
				you will not be able to return.
			</para>
		</sect1>
		<sect1 id="batch_copy_users">
			<title>Batch Copy Users</title>
			<para>
				Batch Copy is a helpful utility that helps Cacti Administrators maintain users.  Because Cacti
				does not yet support groups, it is important that there is some way to mass update users.  This
				what Batch Copy does for you.
			</para>
			<figure id="img_user_batch_copy_1">
				<title>Batch Copy Users Part 1</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_batch_copy_1" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				To Batch Copy a set of or a single user, select the <guilabel>User Management</guilabel>
				item under the <guilabel>Utilities</guilabel> heading on the Cacti menu. Once at the user management
				screen, select the user(s) you would like to batch copy information to and select "Batch Copy" from the
				<guilabel>Action</guilabel> selection box, click <guilabel>Go</guilabel> to continue.
			</para>
			<figure id="img_user_batch_copy_2">
				<title>Batch Copy Users Part 2</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_batch_copy_2" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				Select the <guilabel>Template User</guilabel> and confirm that you want to Batch Copy the listed users.
				Click <guilabel>Yes</guilabel> to perform the action.
			</para>
			<para>
				It is important to note that when using <guilabel>Batch Copy</guilabel> the original user(s) Full Name,
				Password, Realm and Enable status will be retained, all other fields will be overwritten with values from
				the selected template user.
			</para>
		</sect1>
		<sect1 id="delete_users">
			<title>Delete Users</title>
			<figure id="img_user_delete_1">
				<title>Delete Users Part 1</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_delete_1" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				To delete a set of or a single user, select the <guilabel>User Management</guilabel>
				item under the <guilabel>Utilities</guilabel> heading on the Cacti menu. Once at the user management
				screen, select the user(s) you would like to delete and select delete from the
				<guilabel>Action</guilabel> selection box, click <guilabel>Go</guilabel> to continue.
			</para>
			<figure id="img_user_delete_2">
				<title>Delete Users Part 2</title>

				<mediaobject>
					<imageobject>
						<imagedata fileref="images/user_management_delete_2" format="PNG">
					</imageobject>
				</mediaobject>
			</figure>
			<para>
				Confirm that you want to delete the listed users. Click <guilabel>Yes</guilabel> to
				perform the action.  Deleting your own account is possible and not recommended.
			</para>
		</sect1>
		<sect1 id="guest_access">
			<title>Guest (Anonymous) Access </title>
			<para>
				By default in 0.8.7 and later of Cacti, Guest or Anonymous access is disabled.  This is
				shift from previous release that came with the "Guest" user enabled and set.
			</para>
			<para>
				Enabling "Guest" access is easy.  But, you must understand that you should only allow the
				designated "Guest" user access to what you authorized.  It is not sugguested that you give
				the designated "Guest" user more than just access to graphs.  To enable guest access, first,
				need a designated "Guest" user.  Cacti by default comes with one already created that has
				access to only graphs.   It is important to note that the default guest user has access to all
				graphs on the system.  Once you have created the "Guest" user, you need to tell Cacti what
				the "Guest" user is.  This is done by updating the Authenication Settings and selecting the
				"Guest" user you have designated.  The "Guest" user must be enabled and be set as the guest
				user for anonymous access to work.
			</para>
		</sect1>
	</chapter>
</part>
